library(here)
here()
getwd()
predict(m[[1]])
#-----------------------------------------------------------------
# Author: Aya Mitani
# Last updated: 2021-11-24
# What: Code to analyze dog bite data
#----------------------------------------------------------------
# read in data
bite <- read.csv(here("data", "dogbite.csv"), header = TRUE)
head(bite)
# Are bites from pit bull more likely to be by puppy, male, spayed dogs?
bite2 <- bite %>%
mutate(Puppy = ifelse(Age < 4, 1, 0),
Male = ifelse(Gender == "M", 1, 0),
Spayed = ifelse(SpayNeuter == "true", 1, 0),
Pitbull = ifelse(Breedclean == "Pit bull", 1, 0))
# logistic regression
glmbite <- glm(Pitbull ~ Puppy + Male + Spayed, data = bite2, family = binomial("logit"))
sumbite <- summary(glmbite)
# use kable to make markdown table
kable(sumbite$coefficients, digits = 3)
# use xtable to make latex table
xtable(glmbite)
table1 <- xtable(glmbite,
# title of the table
caption = "Results from logistic regression analysis",
# label for referencing
label = "table:logreg",
# number of decimal places
digits = 2
)
print.xtable(table1, file = here("results", "table1.txt"))
# html table
print.xtable(table1, type = "html", caption.placement = "top")
# I want to compare results from these three models
m1 <- glm(Pitbull ~ Puppy, data = bite2, family = binomial("logit"))
m2 <- glm(Pitbull ~ Puppy + Male, data = bite2, family = binomial("logit"))
m3 <- glm(Pitbull ~ Puppy + Male + Spayed, data = bite2, family = binomial("logit"))
screenreg(list(m1, m2, m3), ci.force = TRUE)
# I want to compute the OR (95% CI) for a table
summary(m1)$coefficients[,1]
OR_95CI <- function(coef, se, siglevel, roundto){
q <- 1 - siglevel / 2
OR <- exp(coef)
ORlcl <- exp(coef - qnorm(q) * se)
ORucl <- exp(coef + qnorm(q) * se)
ORresult <- paste0(format(round(OR, roundto), nsmall=roundto), " (", format(round(ORlcl, roundto), nsmall=roundto), ", ", format(round(ORucl, roundto), nsmall=roundto), ")")
return(ORresult)
}
m <- list()
m[[1]] <- glm(Pitbull ~ Puppy, data = bite2, family = binomial("logit"))
m[[2]] <- glm(Pitbull ~ Puppy + Male, data = bite2, family = binomial("logit"))
m[[3]] <- glm(Pitbull ~ Puppy + Male + Spayed, data = bite2, family = binomial("logit"))
msum <- lapply(m, summary)
msum[[1]]$coef
msum[[1]]$coef[,1]
orvec <- list()
for(i in 1:3) orvec[[i]] <- OR_95CI(msum[[i]]$coef[,1], msum[[i]]$coef[,2], 0.05, 2)
orvec
varnames <- c("Intercept", "Puppy", "Male", "Spayed")
data_rbind <- as.data.frame(bind_cols(varnames, orvec[[1]], orvec[[2]], orvec[[3]]))
ORout <- as.data.frame(cbind(parameters, ORcc, ORcw, ORbbd, ORrrz), row.names = FALSE)
names(ORout) <- c("Variable", "CCGEE", "CWGEE", "DWGEE", "IPC-CWGEE")
ORtable <- xtable(ORout)
print(ORtable, include.rownames = FALSE)
predict(m[[1]])
m[[1]] <- glm(Pitbull ~ Agenum, data = bite2, family = binomial("logit"))
m <- list()
m[[1]] <- glm(Pitbull ~ Agenum, data = bite2, family = binomial("logit"))
m[[2]] <- glm(Pitbull ~ Agenum + Male, data = bite2, family = binomial("logit"))
m[[3]] <- glm(Pitbull ~ Agenum + Male + Spayed, data = bite2, family = binomial("logit"))
msum <- lapply(m, summary)
msum
msum <- lapply(m, predict)
msum
install.packages("sjPlot")
library(sjPlot)
msum <- lapply(m, summary)
msum <- lapply(m, summary)
msum[[1]]$coef
msum[[1]]$coef
tab_model(m[[1]], m[[2]], m[[3]])
?tab_model
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#fig.width=9, fig.height=3.5, fig.retina=3,
fig.retina = 3,
#out.height = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(here)
library(emo)
library(tidyverse)
library(knitr)
library(xtable)
library(texreg)
tab_model(m1, m2, m3, show.p = FALSE)
OR_95CI <- function(coef, se, siglevel, roundto){
q <- 1 - siglevel / 2
OR <- exp(coef)
ORlcl <- exp(coef - qnorm(q) * se)
ORucl <- exp(coef + qnorm(q) * se)
ORresult <- paste0(format(round(OR, roundto), nsmall=roundto), " (", format(round(ORlcl, roundto), nsmall=roundto), ", ", format(round(ORucl, roundto), nsmall=roundto), ")")
return(ORresult)
}
m <- list()
m[[1]] <- glm(Pitbull ~ Puppy, data = bite2, family = binomial("logit"))
m[[2]] <- glm(Pitbull ~ Male, data = bite2, family = binomial("logit"))
m[[3]] <- glm(Pitbull ~ Spayed, data = bite2, family = binomial("logit"))
msum <- lapply(m, summary)
msum[[1]]$coef
msum[[1]]$coef[,1]
orvec <- list()
for(i in 1:3) orvec[[i]] <- OR_95CI(msum[[i]]$coef[,1], msum[[i]]$coef[,2], 0.05, 2)
orvec
varnames <- c("Intercept", "Puppy", "Male", "Spayed")
data_rbind <- as.data.frame(bind_cols(varnames, orvec[[1]], orvec[[2]], orvec[[3]]))
ORout <- as.data.frame(cbind(parameters, ORcc, ORcw, ORbbd, ORrrz), row.names = FALSE)
names(ORout) <- c("Variable", "CCGEE", "CWGEE", "DWGEE", "IPC-CWGEE")
varnames <- c("Intercept", "OR (95% CI)")
data_rbind <- as.data.frame(bind_cols(varnames, orvec[[1]], orvec[[2]], orvec[[3]]))
data_rbind
m <- list()
m[[1]] <- glm(Pitbull ~ Puppy, data = bite2, family = binomial("logit"))
m[[2]] <- glm(Pitbull ~ Puppy + Male, data = bite2, family = binomial("logit"))
m[[3]] <- glm(Pitbull ~ Puppy + Male + Spayed, data = bite2, family = binomial("logit"))
msum <- lapply(m, summary)
msum[[1]]$coef
msum[[1]]$coef[,1]
orvec <- list()
for(i in 1:3) orvec[[i]] <- OR_95CI(msum[[i]]$coef[,1], msum[[i]]$coef[,2], 0.05, 2)
orvec
varnames <- c("Intercept", "Puppy", "Male", "Spayed")
data_rbind <- (bind_rows(varnames, orvec[[1]], orvec[[2]], orvec[[3]]))
?bind_rows
data_rbind <- bind_rows(orvec[[1]], orvec[[2]], orvec[[3]])
orvec
data_rbind <- left_join(varnaes, orvec[[1]], orvec[[2]], orvec[[3]])
data_rbind <- left_join(varnames, orvec[[1]], orvec[[2]], orvec[[3]])
data_rbind <- left_join(orvec[[1]], orvec[[2]], orvec[[3]])
orvec[[1]]
data_rbind <- data.frame(orvec[[1]], orvec[[2]], orvec[[3]])
data_rbind <- data.frame(varnames, c(orvec[[1]], rep(NA, 2)), c(orvec[[2]], NA), orvec[[3]])
data_rbind
ORout <- as.data.frame(varnames, c(orvec[[1]], rep(NA, 2)), c(orvec[[2]], NA), orvec[[3]])
ORout <- data.frame(varnames, c(orvec[[1]], rep(NA, 2)), c(orvec[[2]], NA), orvec[[3]])
names(ORout) <- c("Variable", "M1", "M2", "M3")
ORtable <- xtable(ORout)
print(ORtable, include.rownames = FALSE)
ORtable <- xtable(ORout[-1,])
print(ORtable, include.rownames = FALSE)
session_info()
sessionInfor()
sessionInfo()
session_info()
?ggsave
#-----------------------------------------------------------------
# Author: Aya Mitani
# Last updated: 2021-11-24
# What: Bar chart of dog breed
#----------------------------------------------------------------
bite <- read.csv(here("data", "dogbite.csv"), header = TRUE)
bite %>%
group_by(Breedclean) %>%
summarise(n=n()) %>%
ggplot(aes(x = reorder(Breedclean, n), y = n)) +
geom_bar(stat = "identity", aes(fill = Breedclean)) +
theme_classic() +
theme(legend.position = "none") +
labs(y = "Count", x = "Breed") +
coord_flip()
ggsave(filename = here("results", "figure_barchart_dogbreed.png"))
print.xtable(ORtable, include.rownames = FALSE)
source(here("code", "build_models.R"))
m
msum
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#fig.width=9, fig.height=3.5, fig.retina=3,
fig.retina = 3,
#out.height = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(here)
library(emo)
library(tidyverse)
library(knitr)
library(xtable)
library(texreg)
library(sjPlot)
knitr::include_graphics("images/researchtriangle.png")
download.file(
url = "https://github.com/rstudio/hex-stickers/archive/master.zip",
destfile = file.path("rstudio-hex.zip")
)
download.file(
url = "https://github.com/rstudio/hex-stickers/archive/master.zip",
destfile = file.path(here("markdown", "reproducibility in research", "images", "rstudio-hex.zip"))
)
unzip(
zipfile = file.path("rstudio-hex.zip"),
#exdir = hex_folder
)
?unzip
unzip(
)
unzip(
zipfile = file.path(here("markdown", "reproducibility in research", "images", "rstudio-hex.zip")),
exdir = here("markdown", "reproducibility in research", "images")
)
path <- here("markdown", "reproducibility in research", "images", "hex-stickers-master", "PNG")
# Remove the non-image files
unlink(list.files(path, full.names = TRUE)[tools::file_ext(list.files(path)) %in% c("md", "Rmd")])
list.files(path)
install.packages("magick")
library(magick)
library(purrr)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#fig.width=9, fig.height=3.5, fig.retina=3,
fig.retina = 3,
#out.height = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(here)
library(emo)
library(tidyverse)
library(knitr)
library(xtable)
library(texreg)
library(sjPlot)
knitr::include_graphics("images/then_now.png")
knitr::include_graphics("images/then_now.png")
articles <- read.csv(here("data", "reprodarticles.csv"), header = TRUE)
articles %>%
group_by(year) %>%
count() %>%
ggplot(aes(year, n)) +
geom_point(color='#42AB0B', size=2) +
geom_line(color='#42AB0B', size=2) +
theme_classic(base_size = 12) +
labs(title = "Pubmed articles with search term ('replic' OR 'reproduc') AND 'crisis', 2010-2021", hjust = 0.5,
y = "Number of articles", x = "Year of publication")
vignette(package = "xaringanthemer")
articles <- read.csv(here("data", "reprodarticles.csv"), header = TRUE)
articles %>%
group_by(year) %>%
count() %>%
ggplot(aes(year, n)) +
geom_point(color='#42AB0B', size=2) +
geom_line(color='#42AB0B', size=2) +
theme_classic(base_size = 12) +
labs(title = "Pubmed articles with search term \n('replic' OR 'reproduc') AND 'crisis', 2010-2021", hjust = 0.5,
y = "Number of articles", x = "Year of publication")
?include_graphics
#-----------------------------------------------------------------
# Author: Aya Mitani
# Last updated: 2021-11-24
# What: Line chart by year and borough
#----------------------------------------------------------------
bite <- read.csv(here("data", "dogbite.csv"), header = TRUE)
bite %>%
group_by(Borough, Year) %>%
summarise(n = n()) %>%
ggplot(aes(x = Year, y = n, color = Borough)) +
geom_point() +
geom_line() +
labs(y = "Count", x = "Year") +
scale_x_continuous(breaks = seq(2015, 2017, by = 1)) +
theme_classic()
ggsave(filename = here("results", "figure_line_yearborough.png"))
#-----------------------------------------------------------------
# Author: Aya Mitani
# Last updated: 2021-11-24
# What: Create table of odds ratios from three logistic regression models
#----------------------------------------------------------------
source(here("code", "build_models.R"))
orvec <- list()
for(i in 1:3) orvec[[i]] <- OR_95CI(msum[[i]]$coef[,1], msum[[i]]$coef[,2], 0.05, 2)
orvec
varnames <- c("Intercept", "Puppy", "Male", "Spayed")
ORout <- data.frame(varnames, c(orvec[[1]], rep(NA, 2)), c(orvec[[2]], NA), orvec[[3]])
names(ORout) <- c("Variable", "M1", "M2", "M3")
ORtable <- xtable(ORout[-1,])
print.xtable(ORtable, filename = here("results", "table_ORof3models.txt"), include.rownames = FALSE)
OR_95CI <- function(coef, se, siglevel, roundto){
q <- 1 - siglevel / 2
OR <- exp(coef)
ORlcl <- exp(coef - qnorm(q) * se)
ORucl <- exp(coef + qnorm(q) * se)
ORresult <- paste0(format(round(OR, roundto), nsmall=roundto), " (", format(round(ORlcl, roundto), nsmall=roundto), ", ", format(round(ORucl, roundto), nsmall=roundto), ")")
return(ORresult)
}
orvec <- list()
for(i in 1:3) orvec[[i]] <- OR_95CI(msum[[i]]$coef[,1], msum[[i]]$coef[,2], 0.05, 2)
orvec
varnames <- c("Intercept", "Puppy", "Male", "Spayed")
ORout <- data.frame(varnames, c(orvec[[1]], rep(NA, 2)), c(orvec[[2]], NA), orvec[[3]])
names(ORout) <- c("Variable", "M1", "M2", "M3")
ORtable <- xtable(ORout[-1,])
print.xtable(ORtable, filename = here("results", "table_ORof3models.txt"), include.rownames = FALSE)
print(ORtable, filename = here("results", "table_ORof3models.txt"), include.rownames = FALSE)
print.xtable(ORtable, file = here("results", "table_ORof3models.txt"), include.rownames = FALSE)
knitr::include_graphics("images/insidecode.png")
library(devtools) # load devtools package
devtools::install_github("ayamitani/oddsratio") # install package from git repo
library(oddsratio) # load package
m4 <- glm(Pitbull ~ Agenum, data = bite2, family = binomial("logit"))
m4coef <- summary(m4)$coef
OR_95CI(m4coef[,1], m4coef[,2], 0.05, 3)
xaringan::infinite_moon_reader()
?infinite_moon_reader
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
#fig.width=9, fig.height=3.5, fig.retina=3,
fig.retina = 3,
#out.height = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(here)
library(emo)
library(tidyverse)
library(knitr)
library(xtable)
library(texreg)
library(sjPlot)
knitr::include_graphics("images/insideresults.png")
